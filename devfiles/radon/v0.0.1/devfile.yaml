metadata:
  generateName: radon-workspace-
projects:
  - name: radon-particles
    source:
      location: 'https://github.com/radon-h2020/radon-particles'
      type: git
components:
  - id: eclipse/che-theia/next
    type: cheEditor
    alias: theia-editor
  - endpoints:
      - name: radon-gmt
        port: 8080
        attributes:
          protocol: http
          public: 'true'
          discoverable: 'false'
          secure: 'false'
    referenceContent: |
      ---
       apiVersion: v1
       kind: PersistentVolumeClaim
       metadata:
         name: projects
       spec:
         storageClassName: manual
         accessModes:
           - ReadWriteOnce
         resources:
           requests:
             storage: 1Gi
      ---
       apiVersion: apps/v1
       kind: Deployment
       metadata:
         name: winery-deployment
         labels:
           app: winery
           tier: frontend
       spec:
         replicas: 1
         selector:
           matchLabels:
             app: winery
             tier: frontend
         template:
           metadata:
             labels:
               app: winery
               tier: frontend
           spec:
             volumes:
               - name: projects-storage
                 persistentVolumeClaim:
                   claimName: projects
             containers:
               - name: winery
                 image: opentosca/radon-gmt:latest
                 imagePullPolicy: Always
                 ports:
                   - containerPort: 8080
                 env:
                   - name: WINERY_FEATURE_RADON
                     value: "true"
                   - name: WINERY_REPOSITORY_PROVIDER
                     value: "yaml"
                   - name: WINERY_REPOSITORY_URL
                     value: "https://github.com/radon-h2020/radon-particles"
                   - name: WINERY_REPOSITORY_PATH
                     value: "/projects/radon-particles"
                   - name: WINERY_CSAR_OUTPUT_PATH
                     value: "/projects/radon-csars"
                 volumeMounts:
                   - mountPath: "/projects"
                     name: projects-storage
    type: kubernetes
    alias: radon-gmt
  - endpoints:
      - name: radon-vt
        port: 5000
        attributes:
          protocol: http
          public: 'true'
          discoverable: 'false'
          secure: 'false'
    referenceContent: |
      ---
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: vt-deployment
        labels:
          app: vt
          tier: frontend
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: vt
            tier: frontend
        template:
          metadata:
            labels:
              app: vt
              tier: frontend
          spec:
            volumes:
              - name: projects-storage-vt
                persistentVolumeClaim:
                  claimName: projects
            containers:
              - name: vt
                image: marklawimperial/verification-tool:latest
                imagePullPolicy: Always
                ports:
                  - containerPort: 5000
                volumeMounts:
                  - mountPath: "/projects"
                    name: projects-storage-vt
    type: kubernetes
    alias: radon-vt
  - type: chePlugin
    reference: >-
      https://raw.githubusercontent.com/radon-h2020/radon-plugin-registry/master/radon/radon-vt/latest/meta.yaml
	alias: radon-vt-chePlugin
  - type: chePlugin
    reference: >-
      https://raw.githubusercontent.com/radon-h2020/radon-plugin-registry/master/radon/radon-decomposition/0.0.1/meta.yaml
	alias: radon-dt
  - type: chePlugin
    reference: >-
      https://raw.githubusercontent.com/radon-h2020/radon-plugin-registry/master/radon/radon-defect-predictor/latest/meta.yaml
	alias: radon-dpt
  - type: chePlugin
    reference: >-
      https://raw.githubusercontent.com/radon-h2020/radon-plugin-registry/master/radon/radon-menu/meta.yaml
    alias: radon-menu
apiVersion: 1.0.0
